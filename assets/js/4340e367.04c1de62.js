"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7037],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>u});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var d=n.createContext({}),p=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,d=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=p(r),u=l,m=c["".concat(d,".").concat(u)]||c[u]||k[u]||a;return r?n.createElement(m,o(o({ref:t},s),{},{components:r})):n.createElement(m,o({ref:t},s))}));function u(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=c;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},7608:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>k,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(7462),l=(r(7294),r(3905));const a={},o=void 0,i={unversionedId:"sdk/teleport-sdk.teleportbridge.initrelayedteleport",id:"sdk/teleport-sdk.teleportbridge.initrelayedteleport",title:"teleport-sdk.teleportbridge.initrelayedteleport",description:"Home &gt; teleport-sdk &gt; TeleportBridge &gt; initRelayedTeleport",source:"@site/docs/sdk/teleport-sdk.teleportbridge.initrelayedteleport.md",sourceDirName:"sdk",slug:"/sdk/teleport-sdk.teleportbridge.initrelayedteleport",permalink:"/teleport-sdk-docs/docs/sdk/teleport-sdk.teleportbridge.initrelayedteleport",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sdk/teleport-sdk.teleportbridge.initrelayedteleport.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"teleport-sdk.teleportbridge.getteleportguidfromtxhash",permalink:"/teleport-sdk-docs/docs/sdk/teleport-sdk.teleportbridge.getteleportguidfromtxhash"},next:{title:"teleport-sdk.teleportbridge.initteleport",permalink:"/teleport-sdk-docs/docs/sdk/teleport-sdk.teleportbridge.initteleport"}},d={},p=[{value:"TeleportBridge.initRelayedTeleport() method",id:"teleportbridgeinitrelayedteleport-method",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Remarks",id:"remarks",level:2}],s={toc:p};function k(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/teleport-sdk-docs/docs/sdk/"},"Home")," ",">"," ",(0,l.kt)("a",{parentName:"p",href:"/teleport-sdk-docs/docs/sdk/teleport-sdk"},"teleport-sdk")," ",">"," ",(0,l.kt)("a",{parentName:"p",href:"/teleport-sdk-docs/docs/sdk/teleport-sdk.teleportbridge"},"TeleportBridge")," ",">"," ",(0,l.kt)("a",{parentName:"p",href:"/teleport-sdk-docs/docs/sdk/teleport-sdk.teleportbridge.initrelayedteleport"},"initRelayedTeleport")),(0,l.kt)("h2",{id:"teleportbridgeinitrelayedteleport-method"},"TeleportBridge.initRelayedTeleport() method"),(0,l.kt)("p",null,"Helper for initiating a relayed teleportation."),(0,l.kt)("b",null,"Signature:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"initRelayedTeleport(receiverAddress: string, amount: BigNumberish, sender?: Signer, relayAddress?: string, overrides?: Overrides): Promise<Call>;\n")),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"receiverAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"address that will receive tokens on the target domain")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"BigNumberish"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of tokens to teleport")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"sender"),(0,l.kt)("td",{parentName:"tr",align:null},"Signer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("i",null,"(Optional)")," address from which the tokens will be teleported")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"relayAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("i",null,"(Optional)")," address of the relayer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"overrides"),(0,l.kt)("td",{parentName:"tr",align:null},"Overrides"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("i",null,"(Optional)")," ethers.js transaction overrides")))),(0,l.kt)("b",null,"Returns:"),(0,l.kt)("p",null,"Promise","<",(0,l.kt)("a",{parentName:"p",href:"/teleport-sdk-docs/docs/sdk/teleport-sdk.call"},"Call"),">"),(0,l.kt)("h2",{id:"remarks"},"Remarks"),(0,l.kt)("p",null,"Functionally identical to ",(0,l.kt)("a",{parentName:"p",href:"/teleport-sdk-docs/docs/sdk/teleport-sdk.initteleport"},"initTeleport()"),", but filling out the ",(0,l.kt)("inlineCode",{parentName:"p"},"operatorAddress")," with a relayer's known address."))}k.isMDXComponent=!0}}]);