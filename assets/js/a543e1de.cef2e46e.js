"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6409],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4656:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={},i="Teleport Flow",s={unversionedId:"flow",id:"flow",title:"Teleport Flow",description:"Teleport works by locking DAI in a bridge contract and then minting this amount of DAI on another network, by using an attestation set from the Maker Oracles. The Maker Oracle system works as the signaling service for Teleport to free funds to the user once the locking has been confirmed on the source domain.",source:"@site/docs/03-flow.md",sourceDirName:".",slug:"/flow",permalink:"/docs/flow",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-flow.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Initializing the SDK",permalink:"/docs/initializing"},next:{title:"Starting a Teleportation",permalink:"/docs/teleporting"}},l={},c=[],p={toc:c};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"teleport-flow"},"Teleport Flow"),(0,o.kt)("p",null,"Teleport works by locking DAI in a bridge contract and then minting this amount of DAI on another network, by using an attestation set from the Maker Oracles. The Maker Oracle system works as the signaling service for Teleport to ",(0,o.kt)("em",{parentName:"p"},"free")," funds to the user once the locking has been confirmed on the source domain."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See a complete overview of the smart contract system ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/makerdao/dss-teleport/blob/master/README.md"},"here"),".")),(0,o.kt)("p",null,"All teleportation actions are marked by a ",(0,o.kt)("a",{parentName:"p",href:"/docs/sdk/teleport-sdk.teleportguid"},"TeleportGUID")," which is generated by the SDK."),(0,o.kt)("p",null,"When a user ",(0,o.kt)("em",{parentName:"p"},"locks")," DAI on the source domain, a TeleportGUID struct is added to the locking transaction. The Maker Oracles then pick this transaction up and sign the struct data, attesting that the lock has ocurred and that the user's intentions have been stated. Once the oracles publish this signature set, the SDK can retrieve these signatures and post them to the destination domain. This, in turn, frees the funds on the destination domain and sends them to the destination wallet."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/makerdao/dss-teleport/raw/master/docs/fw.png?raw=true",alt:"Teleport Fast Withdrawals Workflow"})))}u.isMDXComponent=!0}}]);